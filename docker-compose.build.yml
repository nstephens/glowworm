# Docker Compose for building from source
# Use this if you want to build images locally instead of pulling from Docker Hub
# Usage: docker-compose -f docker-compose.build.yml build

services:
  # Backend API - Build from source
  glowworm-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: nickstephens/glowworm-backend:latest
    container_name: glowworm-backend
    restart: unless-stopped
    environment:
      # Database connection
      MYSQL_HOST: glowworm-mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE:-glowworm}
      MYSQL_USER: ${MYSQL_USER:-glowworm}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      
      # Application settings
      SECRET_KEY: ${SECRET_KEY}
      SERVER_BASE_URL: ${SERVER_BASE_URL:-http://localhost}
      DEFAULT_DISPLAY_TIME_SECONDS: ${DEFAULT_DISPLAY_TIME_SECONDS:-30}
      UPLOAD_DIRECTORY: ${UPLOAD_DIRECTORY:-uploads}
      
      # Network settings
      DISPLAY_NETWORK_INTERFACE: ${DISPLAY_NETWORK_INTERFACE:-localhost}
      
      # Logging
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./data/uploads:/app/uploads
    ports:
      - "${BACKEND_PORT:-8001}:8001"
    depends_on:
      glowworm-mysql:
        condition: service_healthy
    networks:
      - glowworm-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web Interface - Build from source
  glowworm-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: nickstephens/glowworm-frontend:latest
    container_name: glowworm-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3003}:3003"
    depends_on:
      glowworm-backend:
        condition: service_healthy
    networks:
      - glowworm-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MySQL Database
  glowworm-mysql:
    image: mysql:8.0
    container_name: glowworm-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-glowworm}
      MYSQL_USER: ${MYSQL_USER:-glowworm}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    # No ports exposed - only accessible within Docker network
    # This prevents conflicts with host MySQL and improves security
    networks:
      - glowworm-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  glowworm-network:
    driver: bridge

